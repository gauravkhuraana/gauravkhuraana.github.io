"use strict";(self.webpackChunkgauravkhurana=self.webpackChunkgauravkhurana||[]).push([[3132],{5911:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Git/git-commands","title":"Git Commands","description":"Essential Git commands for daily development workflow","source":"@site/docs/Git/git-commands.mdx","sourceDirName":"Git","slug":"/Git/git-commands","permalink":"/docs/Git/git-commands","draft":false,"unlisted":false,"editUrl":"https://github.com/gauravkhuraana/gauravkhuraana/edit/main/docs/Git/git-commands.mdx","tags":[{"inline":true,"label":"git","permalink":"/docs/tags/git"},{"inline":true,"label":"version-control","permalink":"/docs/tags/version-control"},{"inline":true,"label":"commands","permalink":"/docs/tags/commands"}],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Git Commands","description":"Essential Git commands for daily development workflow","sidebar_position":1,"tags":["git","version-control","commands"]},"sidebar":"tutorialSidebar","previous":{"title":"Screen Capture Tools (Image / GIF / Video)","permalink":"/docs/Tools/best screenshot tools"}}');var a=t(4848),i=t(8453);const l={title:"Git Commands",description:"Essential Git commands for daily development workflow",sidebar_position:1,tags:["git","version-control","commands"]},o="Git Commands",s={},c=[{value:"Untrack Files Locally",id:"untrack-files-locally",level:2},{value:"Learn More",id:"learn-more",level:3},{value:"Revert a Wrong Branch Pull",id:"revert-a-wrong-branch-pull",level:2},{value:"PowerShell Scripts",id:"powershell-scripts",level:2},{value:"Delete All Local Branches",id:"delete-all-local-branches",level:3},{value:"Learn More",id:"learn-more-1",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"git-commands",children:"Git Commands"})}),"\n",(0,a.jsx)(n.h2,{id:"untrack-files-locally",children:"Untrack Files Locally"}),"\n",(0,a.jsxs)(n.p,{children:["When you have files that you modify frequently locally but don't want to commit these changes, you can use Git's ",(0,a.jsx)(n.code,{children:"assume-unchanged"})," feature."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Untrack files locally"',children:"# Untrack a file (Git will ignore local changes)\r\ngit update-index --assume-unchanged <filenamewithfullpathfromdotgitfolder>\r\n\r\n# Track the file again\r\ngit update-index --no-assume-unchanged <filenamewithfullpathfromdotgitfolder>\r\n\r\n# Example\r\ngit update-index --assume-unchanged datafile.properties\n"})}),"\n",(0,a.jsx)(n.h3,{id:"learn-more",children:"Learn More"}),"\n",(0,a.jsx)(n.p,{children:"Watch this video to understand how the above commands work:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://www.youtube.com/watch?v=eBp4GexlqLY",children:(0,a.jsx)(n.img,{src:"https://i.ytimg.com/vi/eBp4GexlqLY/0.jpg",alt:"Try these 2 commands to save time with each commit you make"})})}),"\n",(0,a.jsx)(n.h2,{id:"revert-a-wrong-branch-pull",children:"Revert a Wrong Branch Pull"}),"\n",(0,a.jsx)(n.p,{children:"If you've pulled the wrong branch and want to revert it, follow these 4 steps:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Revert wrong branch pull"',children:"# Step 1: Check the commit history\r\ngit log\r\n\r\n# Look for the commit hash of the state you want to revert to \r\n# (usually, this is the one just before the pull)\r\n\r\n# Step 2: Reset your branch to the desired commit\r\ngit reset --hard <commit_hash>\r\n\r\n# Step 3: Clean up any new files introduced by the pull\r\ngit clean -f\r\n\r\n# Step 4: Verify the status\r\ngit status\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["Always double-check the commit hash before running ",(0,a.jsx)(n.code,{children:"git reset --hard"})," as this operation cannot be easily undone."]})}),"\n",(0,a.jsx)(n.h2,{id:"powershell-scripts",children:"PowerShell Scripts"}),"\n",(0,a.jsx)(n.h3,{id:"delete-all-local-branches",children:"Delete All Local Branches"}),"\n",(0,a.jsx)(n.p,{children:"Delete all local branches except the main branch using PowerShell:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-powershell",metastring:'title="Delete all branches except main"',children:'git branch | Where-Object { $_.Trim() -ne "main" } | ForEach-Object { git branch -D $_.Trim() }\n'})}),"\n",(0,a.jsx)(n.h3,{id:"learn-more-1",children:"Learn More"}),"\n",(0,a.jsx)(n.p,{children:"Watch this video to understand how the branch deletion command works:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://www.youtube.com/watch?v=4Bl4hmvsXoI",children:(0,a.jsx)(n.img,{src:"https://i.ytimg.com/vi/4Bl4hmvsXoI/0.jpg",alt:"Delete all local branches in 1 go"})})}),"\n",(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsx)(n.p,{children:"Be careful when deleting branches. Make sure you don't need any of the branches before running this command."})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var r=t(6540);const a={},i=r.createContext(a);function l(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);