"use strict";(self.webpackChunkgauravkhurana=self.webpackChunkgauravkhurana||[]).push([[8220],{7751:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"API/postman-assertions","title":"Postman Assertions & Testing Guide","description":"Complete guide to Postman assertions, tests, and scripts for API testing. Learn advanced techniques for effective API automation.","source":"@site/docs/API/postman-assertions.mdx","sourceDirName":"API","slug":"/API/postman-assertions","permalink":"/docs/API/postman-assertions","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Postman Assertions & Testing Guide","description":"Complete guide to Postman assertions, tests, and scripts for API testing. Learn advanced techniques for effective API automation.","keywords":["postman","api testing","assertions","javascript","automation","testing"],"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"HTTP Status Codes - Essential Guide for API Testing","permalink":"/docs/API/HTTP-Status-Codes"},"next":{"title":"\ud83d\udee0\ufe0f Tools","permalink":"/docs/category/\ufe0f-tools"}}');var r=s(4848),t=s(8453);const a={title:"Postman Assertions & Testing Guide",description:"Complete guide to Postman assertions, tests, and scripts for API testing. Learn advanced techniques for effective API automation.",keywords:["postman","api testing","assertions","javascript","automation","testing"],sidebar_position:2},o="Postman Assertions & Testing Guide",l={},c=[{value:"\ud83c\udfaf Quick Resources",id:"-quick-resources",level:2},{value:"\ud83d\udccb Table of Contents",id:"-table-of-contents",level:2},{value:"Basic Setup &amp; JSON Response Handling",id:"basic-setup--json-response-handling",level:2},{value:"Converting Response to JSON",id:"converting-response-to-json",level:3},{value:"Status Code Assertions",id:"status-code-assertions",level:2},{value:"Basic Status Code Tests",id:"basic-status-code-tests",level:3},{value:"Response Body &amp; Property Assertions",id:"response-body--property-assertions",level:2},{value:"Property Existence &amp; Values",id:"property-existence--values",level:3},{value:"JSON Body Structure",id:"json-body-structure",level:3},{value:"Headers &amp; Cookies Assertions",id:"headers--cookies-assertions",level:2},{value:"Header Validations",id:"header-validations",level:3},{value:"Cookie Assertions",id:"cookie-assertions",level:3},{value:"Response Time &amp; Size Assertions",id:"response-time--size-assertions",level:2},{value:"Performance Testing",id:"performance-testing",level:3},{value:"Data Type &amp; Value Assertions",id:"data-type--value-assertions",level:2},{value:"Type Checking",id:"type-checking",level:3},{value:"Value Comparisons",id:"value-comparisons",level:3},{value:"JSON Navigation &amp; Searching",id:"json-navigation--searching",level:2},{value:"Working with Nested JSON",id:"working-with-nested-json",level:3},{value:"Array Operations &amp; Loops",id:"array-operations--loops",level:3},{value:"Variables &amp; Request Chaining",id:"variables--request-chaining",level:2},{value:"Setting Variables",id:"setting-variables",level:3},{value:"Request Chaining Example",id:"request-chaining-example",level:3},{value:"Express.js Webhook Server for API Testing",id:"expressjs-webhook-server-for-api-testing",level:3},{value:"Advanced Techniques",id:"advanced-techniques",level:2},{value:"Console Logging &amp; Debugging",id:"console-logging--debugging",level:3},{value:"JavaScript Comparisons",id:"javascript-comparisons",level:3},{value:"Regular Expressions",id:"regular-expressions",level:3},{value:"Validation Loops",id:"validation-loops",level:3},{value:"Dynamic Variables &amp; Pre-request Scripts",id:"dynamic-variables--pre-request-scripts",level:2},{value:"Using Dynamic Variables",id:"using-dynamic-variables",level:3},{value:"Advanced Pre-request Example",id:"advanced-pre-request-example",level:3},{value:"HTML Parsing with Cheerio",id:"html-parsing-with-cheerio",level:3},{value:"Best Practices &amp; Tips",id:"best-practices--tips",level:2},{value:"\ud83d\udca1 Key Tips",id:"-key-tips",level:3},{value:"\ud83d\udd27 Common Patterns",id:"-common-patterns",level:3},{value:"Connect With Me",id:"connect-with-me",level:2},{value:"\ud83d\udcda Additional Resources",id:"-additional-resources",level:2}];function d(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"postman-assertions--testing-guide",children:"Postman Assertions & Testing Guide"})}),"\n",(0,r.jsx)(n.h2,{id:"-quick-resources",children:"\ud83c\udfaf Quick Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udcfa YouTube Tutorial"}),": ",(0,r.jsx)(n.a,{href:"https://www.youtube.com/@Udzial/playlists?sub_confirmation=1",children:"Watch Postman Testing Guide"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udcbc LinkedIn"}),": ",(0,r.jsx)(n.a,{href:"https://www.linkedin.com/in/gauravkhuraana/",children:"Follow for Testing Insights"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udcac Connect with me"}),": ",(0,r.jsx)(n.a,{href:"https://topmate.io/gauravkhurana",children:"Topmate"})]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{title:"About this guide",type:"info",children:(0,r.jsxs)(n.p,{children:["Created by ",(0,r.jsx)(n.a,{href:"https://linktr.ee/gauravkhurana",children:"Gaurav Khurana"})," based on learning Postman.",(0,r.jsx)(n.br,{}),"\n","Complete Postman Tutorial notes and mindmap available at ",(0,r.jsx)(n.a,{href:"https://udzial.com/postman-tutorial-notes/",children:"udzial.com"})]})}),"\n",(0,r.jsxs)(n.p,{children:["This comprehensive guide covers all essential Postman assertions and testing techniques that can be used in both ",(0,r.jsx)(n.strong,{children:"Tests"})," and ",(0,r.jsx)(n.strong,{children:"Pre-request Scripts"})," sections."]}),"\n",(0,r.jsx)(n.h2,{id:"-table-of-contents",children:"\ud83d\udccb Table of Contents"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#basic-setup--json-response-handling",children:"Basic Setup & JSON Response Handling"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#status-code-assertions",children:"Status Code Assertions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#response-body--property-assertions",children:"Response Body & Property Assertions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#headers--cookies-assertions",children:"Headers & Cookies Assertions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#response-time--size-assertions",children:"Response Time & Size Assertions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#data-type--value-assertions",children:"Data Type & Value Assertions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#json-navigation--searching",children:"JSON Navigation & Searching"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#variables--request-chaining",children:"Variables & Request Chaining"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#advanced-techniques",children:"Advanced Techniques"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#dynamic-variables--pre-request-scripts",children:"Dynamic Variables & Pre-request Scripts"})}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"basic-setup--json-response-handling",children:"Basic Setup & JSON Response Handling"}),"\n",(0,r.jsx)(n.h3,{id:"converting-response-to-json",children:"Converting Response to JSON"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Basic JSON response handling\nvar jsonResponse = pm.response.json();\n\n// Accessing nested properties\nlet name = jsonResponse.points.find(inp => {\n    return inp.suite.id === "9000"\n});\nconsole.log("The point id for the given testcase is " + name.id);\nconsole.log("The testPlan id for the given testcase is " + name.testPlan.id);\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"status-code-assertions",children:"Status Code Assertions"}),"\n",(0,r.jsx)(n.h3,{id:"basic-status-code-tests",children:"Basic Status Code Tests"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Status code assertions\npm.response.to.have.status("OK");\npm.response.to.have.status(200);\n\n// Multiple status codes\npm.expect(pm.response.code).to.be.oneOf([201, 200]);\n\n// Case insensitive status check\npm.expect(pm.response.status.toLowerCase()).to.equal("OK".toLowerCase());\n\n// Bad request validation\npm.response.to.be.badRequest;\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"response-body--property-assertions",children:"Response Body & Property Assertions"}),"\n",(0,r.jsx)(n.h3,{id:"property-existence--values",children:"Property Existence & Values"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Check if property exists\npm.test(\"Response should contain the key 'token'\", function() {\n    var jsondata = pm.response.json();\n    pm.expect(jsondata).to.have.property(\"token\");\n});\n\n// Property value validation\npm.test(\"Token must not be null\", function() {\n    var jsondata = pm.response.json();\n    var flag = jsondata.token == null;\n    pm.expect(flag).to.equal(false);\n});\n\n// Property with specific value\npm.expect(response).to.have.property('code', 200);\npm.expect(response).to.have.property('status', 'OK');\n"})}),"\n",(0,r.jsx)(n.h3,{id:"json-body-structure",children:"JSON Body Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Check if response has JSON body\npm.response.to.have.jsonBody();\n\n// Check value not present\npm.response.to.not.have.jsonBody('error');\n\n// Check if response is JSON\npm.response.to.be.json;\n\n// Verify response is not empty\npm.expect(firstRequest.response, 'check saved example').to.not.be.empty;\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"headers--cookies-assertions",children:"Headers & Cookies Assertions"}),"\n",(0,r.jsx)(n.h3,{id:"header-validations",children:"Header Validations"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Check header existence\npm.response.to.have.header("content-type");\n\n// Header value validation\npm.expect(pm.response.headers.get("Content-Type")).to.eql("text/html; charset=utf-8");\npm.expect(pm.response.headers.get("Server")).to.eql("Cowboy");\n'})}),"\n",(0,r.jsx)(n.h3,{id:"cookie-assertions",children:"Cookie Assertions"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Cookie existence\npm.expect(pm.cookies.has("VstsSession")).to.be.true;\n\n// Cookie value validation\npm.expect(pm.cookies.get("VstsSession")).to.be.equal("12345");\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"response-time--size-assertions",children:"Response Time & Size Assertions"}),"\n",(0,r.jsx)(n.h3,{id:"performance-testing",children:"Performance Testing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Response time validations\npm.expect(pm.response.responseTime).to.be.below(25000);\npm.expect(pm.response.responseTime).to.be.above(199);\n\n// Using Lodash for range validation\npm.expect(_.inRange(pm.response.responseTime, 20, 20000)).to.eql(true);\n\n// Response size validation\npm.expect(pm.response.responseSize).to.not.equal(0);\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"data-type--value-assertions",children:"Data Type & Value Assertions"}),"\n",(0,r.jsx)(n.h3,{id:"type-checking",children:"Type Checking"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Data type validations\npm.expect(pm.response.json()).to.be.an("array");\npm.expect(pm.response.json()).to.be.an("object");\npm.expect(parseInt(bookingID)).to.be.a("number");\n\n// Array validations\npm.expect(pm.response.json()).to.have.property(\'collections\').and.be.an(\'array\');\npm.expect([2]).to.be.an("array").that.is.empty;\n'})}),"\n",(0,r.jsx)(n.h3,{id:"value-comparisons",children:"Value Comparisons"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Equality assertions\npm.expect(res.lastname).to.not.equal("Jonesa");\n\n// Numerical comparisons\npm.expect(res.totalprice).to.be.above(100);\npm.expect(res.totalprice).to.be.below(500);\n// Range validations\npm.expect(parseInt(variable.value), \'check collection variable value\')\n    .to.be.at.least(0).and.at.most(30);\n\n// Text inclusion\npm.expect(pm.response.text()).to.include("lastname");\n\n// Date comparison\npm.expect(jsonReq["booking"]["bookingdates"]["checkin"])\n    .to.eql(jsonRes["created-booking"]["booking"]["bookingdates"]["checkin"]);\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"json-navigation--searching",children:"JSON Navigation & Searching"}),"\n",(0,r.jsx)(n.h3,{id:"working-with-nested-json",children:"Working with Nested JSON"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Navigate nested JSON structure\nlet col = pm.response.json().col;\n\n// Search within nested JSON\nlet folder = col.ite.find(fol => {\n    return fol.name === "Collections and environments"\n});\n\n// Collection-level navigation\nlet col = pm.response.json().collection;\nlet folder = col.item.find(fol => { \n    return fol.name == "Add request details"\n});\n\n// Array searching\nlet newRequest = col.item[0].item.find(req => { \n    return req.name === "raw JSON body"\n});\n'})}),"\n",(0,r.jsx)(n.h3,{id:"array-operations--loops",children:"Array Operations & Loops"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Length validation\npm.expect(folder.ite.length, 'check number of requests').equals(2);\npm.expect(folder.ite.length, 'check number of requests').is.greaterThan(0);\npm.expect(response.json().environment.values.length, 'check environment variables').to.equal(4);\n\n// Foreach loop on response JSON\nlet pics = pm.response.json();\npics.forEach((pic) => { \n    console.log(pic.title, pic.url);\n});\n\n// Advanced searching with validation\nlet name = res.results.find(inp => {\n    return inp.name === \"Tatooine\"\n});\n\nif (name != undefined) {\n    pm.expect(name.length, 'check if we got at least one value with Tatooine')\n        .is.greaterThan(0);\n} else {\n    console.log(\"We did not find Tatooine in the output\");\n    pm.expect(true, \"Causing failure as we did not find what was required\")\n        .to.equal(false);\n}\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"variables--request-chaining",children:"Variables & Request Chaining"}),"\n",(0,r.jsx)(n.h3,{id:"setting-variables",children:"Setting Variables"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Collection variables\npm.collectionVariables.set("jsonBody", JSON.stringify(getRandomUserResponse));\n\n// Global/Environment variables\npm.variables.set("hex", pm.variables.replaceIn(\'{{$randomHexColor}}\'));\n\n// Extract ID from response\npm.collectionVariables.set("id", pm.response.json().id);\n'})}),"\n",(0,r.jsx)(n.h3,{id:"request-chaining-example",children:"Request Chaining Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Making subsequent requests\nconst collRequest = {\n    url: `https://api.getpostman.com/collections/${res.form.collection_uid}`,\n    method: 'GET',\n    header: {\n        'x-api-key': `${res.headers[\"x-api-key\"]}`\n    }\n};\n\npm.sendRequest(collRequest, (error, response) => {\n    if (error) {\n        console.log(error);\n        return;\n    }\n    \n    // Validate chained response\n    pm.test('get single collection', () => {\n        pm.expect(error).to.equal(null);\n        pm.expect(response).to.have.property('code', 200);\n        pm.expect(response).to.have.property('status', 'OK');\n        pm.expect(response.json().collection.auth.type, 'check collection authorization')\n            .to.equal(\"apikey\");\n    });\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"expressjs-webhook-server-for-api-testing",children:"Express.js Webhook Server for API Testing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Simple Express.js server to receive and save API responses\n// Useful for testing webhooks and capturing request data\nvar express = require('express');\nvar fs = require('fs');\nvar bodyParser = require('body-parser');\n\nvar app = express();\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json()); // Body parser use JSON data\n\napp.post('/launches', function(req, res) {\n    var outputFilename = './spaceReport.json'; // path of the file to output\n    \n    // Write JSON payload to file system\n    fs.writeFileSync(outputFilename, JSON.stringify(JSON.parse(req.body.payload), null, 4));\n    \n    res.send('Saved to ' + outputFilename);\n});\n\nvar port = 3100;\napp.listen(port);\nconsole.log('Express started on port %d ...', port);\n"})}),"\n",(0,r.jsxs)(n.admonition,{title:"Webhook Testing",type:"note",children:[(0,r.jsx)(n.p,{children:"This Express server is perfect for:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Testing webhooks"})," - Capture and inspect webhook payloads"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data persistence"})," - Save API responses for analysis"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Integration testing"})," - Create endpoints for testing API integrations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Request debugging"})," - Log and examine incoming requests"]}),"\n"]}),(0,r.jsx)(n.p,{children:"To use this server:"}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Save the code as ",(0,r.jsx)(n.code,{children:"webhook-server.js"})]}),"\n",(0,r.jsxs)(n.li,{children:["Run ",(0,r.jsx)(n.code,{children:"npm install express body-parser"})]}),"\n",(0,r.jsxs)(n.li,{children:["Start with ",(0,r.jsx)(n.code,{children:"node webhook-server.js"})]}),"\n",(0,r.jsxs)(n.li,{children:["Send POST requests to ",(0,r.jsx)(n.code,{children:"http://localhost:3100/launches"})]}),"\n"]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"advanced-techniques",children:"Advanced Techniques"}),"\n",(0,r.jsx)(n.h3,{id:"console-logging--debugging",children:"Console Logging & Debugging"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Different console methods with different symbols\nconsole.log("Testing log");       // \u2139\ufe0f symbol\nconsole.info("Testing info");     // \u2139\ufe0f symbol  \nconsole.warn("Testing warn");     // \u26a0\ufe0f symbol\nconsole.error("Testing error");   // \u274c symbol\n'})}),"\n",(0,r.jsx)(n.h3,{id:"javascript-comparisons",children:"JavaScript Comparisons"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// == vs === in JavaScript\n// == compares only values \n// === compares datatypes also\n// Examples:\n// 4 === 4     \u2192 true\n// 4 === '4'   \u2192 false  \n// 4 == '4'    \u2192 true\n"})}),"\n",(0,r.jsx)(n.h3,{id:"regular-expressions",children:"Regular Expressions"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Using regex for validation\nlet firstMarkdownLinkRegex = /\\[(.+)\\]\\((.+)\\)/;\npm.expect(firstRequest.request.description.match(firstMarkdownLinkRegex).length, 'check hyperlink')\n    .to.equal(3);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"validation-loops",children:"Validation Loops"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Header validation loop\nif (firstRequest.request.header) {\n    firstRequest.request.header.forEach((header) => {\n        pm.expect(header.description, 'check header description').to.exist;\n    });\n}\n\n// toString validation for multi-line content\npm.expect(test.script.exec.toString(), 'check console log')\n    .to.include(\"console.log(\");\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"dynamic-variables--pre-request-scripts",children:"Dynamic Variables & Pre-request Scripts"}),"\n",(0,r.jsx)(n.h3,{id:"using-dynamic-variables",children:"Using Dynamic Variables"}),"\n",(0,r.jsx)(n.p,{children:"Postman provides built-in dynamic variables for generating test data:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"{{$randomHexColor}}"})," - Random hex color"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"{{$randomFirstName}}"})," - Random first name"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"{{$randomEmail}}"})," - Random email"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://learning.postman.com/docs/writing-scripts/script-references/variables-list/",children:"Complete list of dynamic variables"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"advanced-pre-request-example",children:"Advanced Pre-request Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Generate dynamic hex color and call external API\npm.variables.set("hex", pm.variables.replaceIn(\'{{$randomHexColor}}\'));\n\nconsole.log("The hex color is", pm.variables.get("hex"));\n\nlet hex1 = pm.variables.get("hex");\nlet hex2 = hex1.substring(1, 7);\nlet hex3 = \'http://thecolorapi.com/id?hex=\' + hex2;\n\nconst getRequest = {\n    url: pm.variables.replaceIn(hex3),\n    method: \'GET\',\n};\n\npm.sendRequest(getRequest, (error, response) => {\n    if (error) {\n        console.log(error);\n        return;\n    }\n    \n    response = response.json();\n    let hex = response.hex.value;\n    let rgb = response.rgb.value;\n    let name = response.name.value;\n\n    console.log("hex value is", hex);\n    console.log("rgb value is", rgb);\n    console.log("name value is", name);\n\n    let payload = `{\n        "hex": "${hex}",\n        "rgb": "${rgb}",\n        "name": "${name}"\n    }`;\n\n    pm.collectionVariables.set("payload", payload);\n    console.log("Payload", payload);\n});\n'})}),"\n",(0,r.jsx)(n.h3,{id:"html-parsing-with-cheerio",children:"HTML Parsing with Cheerio"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Extract links from HTML response using Cheerio library\n$ = cheerio.load(pm.response.text());\nlinks = $('a');\nconst allLinks = [];\n\n$(links).each(function (i, link) {\n    if($(link).attr('href')) {\n        if($(link).attr('href').includes('https')) {\n            allLinks.push($(link).attr('href'));\n        }\n    }\n});\n\nconsole.log(\"all links are\", allLinks);\npm.collectionVariables.set(\"links\", JSON.stringify(allLinks));\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"best-practices--tips",children:"Best Practices & Tips"}),"\n",(0,r.jsx)(n.h3,{id:"-key-tips",children:"\ud83d\udca1 Key Tips"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Always use descriptive test names"})," for better reporting"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Use ",(0,r.jsx)(n.code,{children:".json()"})," before accessing variables"]})," - it's necessary for proper object access"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Chain requests efficiently"})," using ",(0,r.jsx)(n.code,{children:"pm.sendRequest()"})," for complex workflows"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Leverage dynamic variables"})," for realistic test data generation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use proper error handling"})," in request chains and async operations"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-common-patterns",children:"\ud83d\udd27 Common Patterns"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Custom assertion names"}),": ",(0,r.jsx)(n.code,{children:"pm.expect(value, 'descriptive message').to.equal(expected)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Variable usage"}),": Use ",(0,r.jsx)(n.code,{children:"${}"})," for script variables and ",(0,r.jsx)(n.code,{children:'[""]'})," for Postman variables"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backticks"}),": Use backticks (`) when variables are involved in strings"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"connect-with-me",children:"Connect With Me"}),"\n",(0,r.jsx)(n.p,{children:"Follow and connect for more API testing insights:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udcfa YouTube"}),": ",(0,r.jsx)(n.a,{href:"https://www.youtube.com/@Udzial/playlists?sub_confirmation=1",children:"Watch API Testing Tutorials"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udcbc LinkedIn"}),": ",(0,r.jsx)(n.a,{href:"https://www.linkedin.com/in/gauravkhuraana/",children:"Follow for Professional Updates"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udcac Topmate"}),": ",(0,r.jsx)(n.a,{href:"https://topmate.io/gauravkhurana",children:"Book 1:1 Sessions"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udcdd Medium"}),": ",(0,r.jsx)(n.a,{href:"https://medium.com/@gauravkhurana",children:"Read My Articles"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-additional-resources",children:"\ud83d\udcda Additional Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://learning.postman.com/docs/writing-scripts/test-scripts/",children:"Official Postman Testing Documentation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://learning.postman.com/docs/writing-scripts/script-references/variables-list/",children:"Postman Dynamic Variables Reference"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://udzial.com/postman-tutorial-notes/",children:"Complete Postman Tutorial"})}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{title:"Connect with the author",type:"tip",children:(0,r.jsxs)(n.p,{children:["Get in touch with ",(0,r.jsx)(n.a,{href:"https://linktr.ee/gauravkhurana",children:"Gaurav Khurana"})," for more automation and testing insights!"]})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var i=s(6540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);